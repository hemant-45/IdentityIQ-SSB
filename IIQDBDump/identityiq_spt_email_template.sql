-- MySQL dump 10.13  Distrib 8.0.17, for Win64 (x86_64)
--
-- Host: localhost    Database: identityiq
-- ------------------------------------------------------
-- Server version	5.7.22-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `spt_email_template`
--

DROP TABLE IF EXISTS `spt_email_template`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `spt_email_template` (
  `id` varchar(32) NOT NULL,
  `created` bigint(20) DEFAULT NULL,
  `modified` bigint(20) DEFAULT NULL,
  `owner` varchar(32) DEFAULT NULL,
  `assigned_scope` varchar(32) DEFAULT NULL,
  `assigned_scope_path` varchar(450) DEFAULT NULL,
  `name` varchar(128) NOT NULL,
  `description` varchar(1024) DEFAULT NULL,
  `from_address` varchar(255) DEFAULT NULL,
  `to_address` varchar(255) DEFAULT NULL,
  `cc_address` varchar(255) DEFAULT NULL,
  `bcc_address` varchar(255) DEFAULT NULL,
  `subject` varchar(255) DEFAULT NULL,
  `body` longtext,
  `signature` longtext,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`),
  KEY `FK9261AD45486634B7` (`assigned_scope`),
  KEY `FK9261AD45A5FB1B1` (`owner`),
  KEY `SPT_IDXEA8F35F17CF0E336` (`assigned_scope_path`(255)),
  CONSTRAINT `FK9261AD45486634B7` FOREIGN KEY (`assigned_scope`) REFERENCES `spt_scope` (`id`),
  CONSTRAINT `FK9261AD45A5FB1B1` FOREIGN KEY (`owner`) REFERENCES `spt_identity` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `spt_email_template`
--

LOCK TABLES `spt_email_template` WRITE;
/*!40000 ALTER TABLE `spt_email_template` DISABLE KEYS */;
INSERT INTO `spt_email_template` VALUES ('4028ab1063f427af0163f428f3fa0153',1528809714682,1739425274737,NULL,NULL,NULL,'Certification','\n      Email Template for notifying work item owners of new certifications.\n    ',NULL,NULL,NULL,NULL,'New access certification: $workItemName','A new access certification report has been assigned to you: $workItemName.\n\nLogin and view your work item inbox to complete this access certification report.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property (also the name property) of the certification WorkItem.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object for the certification.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the certification.</Description>\n    </Argument>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The display name of the Identity that owns the certification.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f4300154',1528809714736,1739425274448,NULL,NULL,NULL,'Bulk Reassignment','\n      Email Template for notifying a user when they have been reassigned identities\n      from an existing certification.\n    ',NULL,NULL,NULL,NULL,'New certification reassignment request: $certificationName','$!requesterName has assigned $numNewIdentities users to you for access certification.  These have been added to $certificationName.\n\nDescription: $!description\n\nComments from $!requesterName:\n--------------------------------------------------------------------------------\n$!comments\n--------------------------------------------------------------------------------\n\nLogin and view your work item inbox to complete this access certification report.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification containing the items to reassign.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the items to reassign.</Description>\n    </Argument>\n    <Argument name=\"owner\" type=\"Identity\">\n      <Description>The Identity object receiving the reassignment request.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>Comments from the reassigner.</Description>\n    </Argument>\n    <Argument name=\"description\" type=\"string\">\n      <Description>Description of the reassignment.</Description>\n    </Argument>\n    <Argument name=\"numNewIdentities\" type=\"string\">\n      <Description>Number of identities reassigned, passed as a string.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the reassignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f4710155',1528809714801,1739425276007,NULL,NULL,NULL,'Delegation','\n      Email Template for notifying work item owners of new delegations.\n    ',NULL,NULL,NULL,NULL,'New delegation request: $!workItemName','$!requesterName has delegated the following work item to you: $!workItemName.\n\nComments from $!requesterName:\n--------------------------------------------------------------------------------\n$!comments\n--------------------------------------------------------------------------------\n\nLogin and view your work item inbox to complete this request.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property (also the name property) of the delegation WorkItem.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>Comments from the delegator.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the delegated item.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the delegation.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f4cc0156',1528809714893,1739425275935,NULL,NULL,NULL,'Delegation Revocation','\n      Email Template for notifying work item owners that their delegation\n      work item has been revoked.\n    ',NULL,NULL,NULL,NULL,'Work item revoked: $workItemName','$requesterName has revoked the following work item from you: $workItemName.  This work item will no longer appear in your queue.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the delegation WorkItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the delegated item.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the delegation.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f4fd0157',1528809714941,1739425275836,NULL,NULL,NULL,'Delegation Finished','\n      Email Template for notifying the original owner that the delegated item has been completed.\n    ',NULL,NULL,NULL,NULL,'Delegation Completed by $delegateeName','$delegateeName has finished the delegated item \'$workItemName\'.\nPlease review the items. \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the delegation WorkItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the delegated item.</Description>\n    </Argument>\n    <Argument name=\"delegateeName\" type=\"string\">\n      <Description>The display name of the Identity that finished the delegation.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f5190158',1528809714969,1739425278668,NULL,NULL,NULL,'Remediation Notification','\n      Email Template for notifying users that an item has been remediated.\n      Notice that this is setup to CC the user\'s manager (see CC attribute above).\n\n      Arguments\n      ---------\n      item:                The CertificationItem being remediated.\n      remediationDetails:  The ProvisioningPlan with the entitlements being removed.\n                           (Convenience accessor for item.action.remediationDetails)\n      identity:            The Identity that is having their item remediated.\n      comments:            Comments from the remediator about the remediation.\n      requester:           The Identity that remediated the item.\n      requesterName:       Full name of the Identity that remediated the item.\n                           (Convenience accessor for requestor.fullName)\n    ',NULL,NULL,'$!identity.manager.email',NULL,'Access is being revoked by $requesterName','$requesterName has revoked one or more entitlements from you.\n\nComments from $requesterName:\n--------------------------------------------------------------------------------\n$!comments\n--------------------------------------------------------------------------------\n\n#if ($remediationDetails.nonModifyAccountRequests &&\n     $remediationDetails.getNonModifyAccountRequests().size() > 0)\n\nAccount Requests:\n-----------------\n#foreach ($acctReq in $remediationDetails.nonModifyAccountRequests)\nApplication: $acctReq.applicationName\n  Operation: $acctReq.operation\n Account ID: $acctReq.nativeIdentity\n\n#end\n#end\n#if ($remediationDetails.modifyAccountRequests &&\n     $remediationDetails.getModifyAccountRequests().size() > 0)\n\nModification Requests:\n----------------------\n#foreach ($acctReq in $remediationDetails.modifyAccountRequests)\nApplication: $acctReq.applicationName\n#if ($acctReq.nativeIdentity) ## Role modification requests in IIQ won\'t have a nativeIdentity\n Account ID: $acctReq.nativeIdentity\n#end\n\n#foreach ($attrReq in $acctReq.attributeRequests)\n  Operation: $attrReq.operation\n  Attribute: $attrReq.name\n   Value(s): $attrReq.value\n\n#end\n#foreach ($permReq in $acctReq.permissionRequests)\n  Operation: $permReq.operation\n Permission: $permReq.target\n   Right(s): $permReq.rightsList\n\n#end\n\n#end\n#end\n','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"CertificationItem\">\n      <Description>The CertificationItem being remediated.</Description>\n    </Argument>\n    <Argument name=\"remediationDetails\" type=\"ProvisioningPlan\">\n      <Description>The ProvisioningPlan with the entitlements being removed (Convenience accessor for item.action.remediationDetails).</Description>\n    </Argument>\n    <Argument name=\"identity\" type=\"Identity\">\n      <Description>The Identity that owns the item being remediated.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>Comments from the remediator about the reason for remediation.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name (usually full name) of the identity that requested the remediation.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"Identity\">\n      <Description>The Identity object of the requester.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f5330159',1528809714995,1739425278761,NULL,NULL,NULL,'Remediation Work Item','\n      Email Template for notifying work item owners of new remediation requests.\n    ',NULL,NULL,NULL,NULL,'New remediation request: $!workItemName','$!requesterName has assigned a new remediation work item to you: $!workItemName.\n\nComments from $!requesterName:\n--------------------------------------------------------------------------------\n$!comments\n--------------------------------------------------------------------------------\n\nLogin and view your work item inbox to complete this request.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The name (also the description) of the remediation work item.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object representing the remediation.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the remediation.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>The Identity object that is the owner of the work item.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f555015a',1528809715029,1739425274653,NULL,NULL,NULL,'Certification Sign Off Approval','\n      Email Template for notifying users when a certification is signed and sent to them\n      for approval.\n\n      This supports the following parameters:\n       - certification: The sailpoint.object.Certification object that was signed.\n       - certifier:     The sailpoint.object.Identity that signed the certification.\n       - approver:      The sailpoint.object.Identity that needs to approve the\n                        certification.  This is the recipient of this email.\n    ',NULL,NULL,NULL,NULL,'$certification.name requires approval','$certification.name was signed by $certifier.displayableName and requires your approval.\n\nLogin and view your work item inbox to complete this request.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the delegated item.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object for the certification approval.</Description>\n    </Argument>\n    <Argument name=\"certifier\" type=\"Identity\">\n      <Description>The Identity object for the user that finished the certification.</Description>\n    </Argument>\n    <Argument name=\"approver\" type=\"Identity\">\n      <Description>The Identity object that is the owner of the work item.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f6b1015b',1528809715377,1739425274582,NULL,NULL,NULL,'Certification Reminder','\n      Email Template for reminding a certification owner that they have a\n      certification waiting for them to complete.\n      This is an \"instant\" email sent on demand from the certification dashboard components.\n      See EmailBean and Emailer.compileOpenCertEmail for context.\n    ',NULL,NULL,NULL,NULL,'Reminder: Certification needs your attention','$recipient.displayableName,\n\nThe certification \"$certification.name\" is still open and needs to be completed.#if ($certification.expiration)  This certification must be finished by $spTools.formatDate($certification.expiration,3,1).#{end}  Please login to IdentityIQ to complete your work.\n\nSincerely,\n$sender.displayableName','<Signature>\n  <Inputs>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object we are reminding someone about.</Description>\n    </Argument>\n    <Argument name=\"recipient\" type=\"Identity\">\n      <Description>The Identity object of the user being reminded.</Description>\n    </Argument>\n    <Argument name=\"sender\" type=\"Identity\">\n      <Description>The Identity object of the user doing the reminding.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f7a5015c',1528809715621,1739425275754,NULL,NULL,NULL,'Continuous Certification Reminder','\n      Email Template for the \"certification required\" state for continuous certifications.\n      Note that the \"This is a reminder\" text is not displayed on the first notification.\n    ',NULL,NULL,NULL,NULL,'Certification due for item: $itemName','#if ($item.remindersSent > 0)This is a reminder that #{end}\"$itemName\" in \"$item.certification.name\" is due for certification.  It must be completed by $spTools.formatDate($item.overdueDate,3,1).\n\nPlease login to IdentityIQ and view your work item inbox to resolve this at your earliest convenience.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"CertificationItem\">\n      <Description>The CertificationItem object.</Description>\n    </Argument>\n    <Argument name=\"itemName\" type=\"string\">\n      <Description>The name of the CertificationItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification.</Description>\n    </Argument>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The name of the Identity that owns the item.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"Identity\">\n      <Description>The identity object that was the scheduler of the certification.</Description>\n    </Argument>\n    <Argument name=\"ordinalNumReminders\" type=\"string\">\n      <Description>The number of this reminder, starting from 1.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"remindersRemaining\" type=\"string\">\n      <Description>The number of reminders remaining after this one.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"oldDueDate\" type=\"date\">\n      <Description>The former due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"newDueDate\" type=\"date\">\n      <Description>The new due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"nowDate\" type=\"date\">\n      <Description>The current date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"created\" type=\"date\">\n      <Description>The date the item was created, passed as a java.util.Date.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f804015d',1528809715716,1739425275679,NULL,NULL,NULL,'Continuous Certification Escalation','\n      Email Template for alerting new continuous cert item owners when an item has\n      escalated to them.\n    ',NULL,NULL,NULL,NULL,'Escalated certification item: $itemName','\"$ItemName\" in \"$item.certification.name\" has been escalated to you.  It previously belonged to $oldOwner.#if ($newDueDate)  If this is not completed by $spTools.formatDate($newDueDate,3,1) it will escalate again.#end\n\n\nPlease login to IdentityIQ and view your work item inbox to resolve this at your earliest convenience.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"CertificationItem\">\n      <Description>The CertificationItem object.</Description>\n    </Argument>\n    <Argument name=\"itemName\" type=\"string\">\n      <Description>The name of the CertificationItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification.</Description>\n    </Argument>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The name of the Identity that owns the item.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"Identity\">\n      <Description>The identity object that was the scheduler of the certification.</Description>\n    </Argument>\n    <Argument name=\"ordinalNumReminders\" type=\"string\">\n      <Description>The number of this reminder, starting from 1.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"remindersRemaining\" type=\"string\">\n      <Description>The number of reminders remaining after this one.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"oldDueDate\" type=\"date\">\n      <Description>The former due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"newDueDate\" type=\"date\">\n      <Description>The new due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"nowDate\" type=\"date\">\n      <Description>The current date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"created\" type=\"date\">\n      <Description>The date the item was created, passed as a java.util.Date.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f834015e',1528809715764,1739425280349,NULL,NULL,NULL,'Work Item Reminder','\n      Email Template for reminding work item owners that their work\n      items are overdue.\n      NOTE: In addition to the declared arguments, all entries \n      from the work item attributes map are also available by name in the template.\n    ',NULL,NULL,NULL,NULL,'Work Item Reminder','This is your $ordinalNumReminders reminder that the work item $workItemName #if($requester)requested by $requester.displayableName, and #{end}created on $spTools.formatDate($created,3,1), #if($expiration)#if($expiration.getTime() > $nowDate.getTime())is due on $spTools.formatDate($expiration,3,1).#{else}was due on $spTools.formatDate($expiration,3,1).#{end}#{else}was due on $spTools.formatDate($oldDueDate,3,1).#{end}\n\n#if ($newDueDate > $expiration)\nThe due date has been extended to $spTools.formatDate($newDueDate,3,1).\n\n#end\n#if ($remindersRemaining > 0)\nThis work item will escalate after $remindersRemaining more reminder(s).\n\n#end\nPlease login to IdentityIQ and view your work item inbox to resolve this at your earliest convenience.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The name of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification.</Description>\n    </Argument>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The name of the Identity that owns the work item.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"Identity\">\n      <Description>The identity object that represents the creator of the work item.</Description>\n    </Argument>\n    <Argument name=\"ordinalNumReminders\" type=\"string\">\n      <Description>The number of this reminder, starting from 1.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"remindersRemaining\" type=\"string\">\n      <Description>The number of reminders remaining after this one.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"oldDueDate\" type=\"date\">\n      <Description>The former due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"newDueDate\" type=\"date\">\n      <Description>The new due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"nowDate\" type=\"date\">\n      <Description>The current date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"created\" type=\"date\">\n      <Description>The date the work item was created, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"expiration\" type=\"date\">\n      <Description>The optional date the work item completely expires, passed as a java.util.Date.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f86e015f',1528809715823,1739425279996,NULL,NULL,NULL,'Work Item Escalation','\n      Email Template for alerting new work item owners when an item has\n      escalated into their queue\n    ',NULL,NULL,NULL,NULL,'Escalated Work Item','The work item \"$workItemName\" escalated.  It previously belonged to $oldOwner and was due on $spTools.formatDate($oldDueDate,3,1).\n\nIt has now been assigned to you#if ($newDueDate), and its due date has been extended to $spTools.formatDate($newDueDate,3,1)#end.\n\nPlease login to IdentityIQ and view your work item inbox to resolve this at your earliest convenience.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The name of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification.</Description>\n    </Argument>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The name of the Identity that owns the work item.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"Identity\">\n      <Description>The identity object that represents the creator of the work item.</Description>\n    </Argument>\n    <Argument name=\"ordinalNumReminders\" type=\"string\">\n      <Description>The number of this reminder, starting from 1.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"remindersRemaining\" type=\"string\">\n      <Description>The number of reminders remaining after this one.  Passed as a String.</Description>\n    </Argument>\n    <Argument name=\"oldDueDate\" type=\"date\">\n      <Description>The former due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"newDueDate\" type=\"date\">\n      <Description>The new due date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"nowDate\" type=\"date\">\n      <Description>The current date, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"created\" type=\"date\">\n      <Description>The date the work item was created, passed as a java.util.Date.</Description>\n    </Argument>\n    <Argument name=\"expiration\" type=\"date\">\n      <Description>The optional date the work item completely expires, passed as a java.util.Date.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f8a00160',1528809715872,1739425279883,NULL,NULL,NULL,'Work Item Comment','\n      Email Template for notifying the requester/owner of a work item\n      that a new comment has been added.\n    ',NULL,NULL,NULL,NULL,'New comments added to work item \"$workItemName\"','Comment added to work item \"$workItemName\" by $commentAuthor on $spTools.formatDate($commentDate,3,1)\n\n--------------------------------------------------------------------------------\n$!commentText','<Signature>\n  <Inputs>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object on which the comment was added.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The name (also the description) of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"comment\" type=\"Comment\">\n      <Description>The Comment object with information about the comment.</Description>\n    </Argument>\n    <Argument name=\"commentAuthor\" type=\"string\">\n      <Description>The name of the Identity that made the comment.</Description>\n    </Argument>\n    <Argument name=\"commentDate\" type=\"date\">\n      <Description>The date the comment was made, represented as a java.util.Date object.</Description>\n    </Argument>\n    <Argument name=\"commentText\" type=\"string\">\n      <Description>The text of the comment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f8d70161',1528809715927,1739425280073,NULL,NULL,NULL,'Work Item Forward','\n      Email Template for notifying the requester/new owner of a work item\n      that it has been forwarded.\n    ',NULL,NULL,NULL,NULL,'Work item \"$workItemName\" forwarded','$requester forwarded work item \"$workItemName\" from $previousOwner to $newOwner on $spTools.formatDate($forwardDate,3,1)\n\n--------------------------------------------------------------------------------\n$!commentText','<Signature>\n  <Inputs>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object being forwarded.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The name (also the description) of the WorkItem on which a comment was added.</Description>\n    </Argument>\n    <Argument name=\"previousOwner\" type=\"string\">\n      <Description>The display name of the Identity that was the previous owner of the work item.</Description>\n    </Argument>\n    <Argument name=\"newOwner\" type=\"string\">\n      <Description>The display name of the Identity that is the new owner of the work item.</Description>\n    </Argument>\n    <Argument name=\"requester\" type=\"string\">\n      <Description>The display name of the Identity that requested the forwarding.</Description>\n    </Argument>\n    <Argument name=\"forwardDate\" type=\"date\">\n      <Description>The date the forwarding was requested, represented as a java.util.Date object.</Description>\n    </Argument>\n    <Argument name=\"commentText\" type=\"string\">\n      <Description>Comments about the forwarding.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f9050162',1528809715973,1739425277597,NULL,NULL,NULL,'Mitigation Expiration','\n      Email Template for notifying certifiers that a mitigation they requested\n      has expired.\n    ',NULL,NULL,NULL,NULL,'Allowed exception has expired for $!identityName','The exception allowed for $!itemDescription on $identityName has expired.\n\nComments from $mitigator:\n--------------------------------------------------------------------------------\n$!comments\n--------------------------------------------------------------------------------','<Signature>\n  <Inputs>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The full name (first and last) of the Identity object that has the mitigation.</Description>\n    </Argument>\n    <Argument name=\"itemDescription\" type=\"string\">\n      <Description>A short description of the item that was mitigated.</Description>\n    </Argument>\n    <Argument name=\"mitigationExpiration\" type=\"MitigationExpiration\">\n      <Description>The sailpoint.object.MitigationExpiration that is sending this notification.</Description>\n    </Argument>\n    <Argument name=\"mitigator\" type=\"string\">\n      <Description>The full name (first and last) of the Identity that created the mitigation.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>Comments from the expired mitigation.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f93a0163',1528809716026,1739425278240,NULL,NULL,NULL,'Policy Violation','\n      Email Template for notifying policy owners of violations.\n    ',NULL,NULL,NULL,NULL,'Policy violation by $identityName','A violation of policy \'$policyName\' rule \'$constraintName\' was detected on user \'$identityName\'.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"identity\" type=\"Identity\">\n      <Description>The Identity object that has the violation.</Description>\n    </Argument>\n    <Argument name=\"policy\" type=\"Policy\">\n      <Description>The Policy object containing the constraint that was violated.</Description>\n    </Argument>\n    <Argument name=\"constraint\" type=\"BaseConstraint\">\n      <Description>A subclass of BaseConstraint representing the policy rule that was violated.</Description>\n    </Argument>\n    <Argument name=\"violation\" type=\"PolicyViolation\">\n      <Description>The PolicyViolation object created to represent the violation.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity object that has the violation.</Description>\n    </Argument>\n    <Argument name=\"policyName\" type=\"string\">\n      <Description>The name of the Policy object.</Description>\n    </Argument>\n    <Argument name=\"constraintName\" type=\"string\">\n      <Description>The name of the constraint (aka rule) within the policy.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f9980164',1528809716120,1739425277931,NULL,NULL,NULL,'Policy Violation Delegation','\n      Email Template for notifying users of the delegation of a policy violation.\n    ',NULL,NULL,NULL,NULL,'Policy violation on $violation.identity.name','A violation of policy \'$violation.policyName\' rule \'$violation.constraintName\' for user \'$violation.identity.name\' has been delegated to you for action.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object representing the delegation.</Description>\n    </Argument>\n    <Argument name=\"violation\" type=\"PolicyViolation\">\n      <Description>The PolicyViolation object being delegated.</Description>\n    </Argument>\n    <Argument name=\"actor\" type=\"Identity\">\n      <Description>The Identity object performing the delegation.</Description>\n    </Argument>\n    <Argument name=\"description\" type=\"string\">\n      <Description>A short description of the violation.</Description>\n    </Argument>\n    <Argument name=\"comments\" type=\"string\">\n      <Description>Comments from the actor about the delegation.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f9ba0165',1528809716154,1739425275326,NULL,NULL,NULL,'Challenge Period Start','\n      Email Template for notifying certification owners that the challenge period has started.\n    ',NULL,NULL,NULL,NULL,'Challenge period started for \'$certificationName\'','The challenge period has started for \'$certificationName\'.  You will be notified\nif any certification decisions are challenged by the affected user.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification beginning the challenge period.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428f9e30166',1528809716195,1739425275230,NULL,NULL,NULL,'Challenge Period End','\n      Email Template for notifying certification owners that the challenge period has ended.\n    ',NULL,NULL,NULL,NULL,'Challenge period ended for \'$certificationName\'','The challenge period has ended for \'$certificationName\'.  Login to IdentityIQ to\ncomplete and sign off on the certification.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification beginning the challenge period.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fa0b0167',1528809716235,1739425274932,NULL,NULL,NULL,'Challenge Creation Notification','\n      Email Template for notifying a challenger that they can challenge a certification decision.\n    ',NULL,NULL,NULL,NULL,'Access being removed or limited for \'$challengeItem\'','It has been determined that your access to \'$challengeItem\' will be limited or removed\ncompletely.  You have $timeRemaining to challenge this decision.\n\nClick on this link to challenge the decision: http://localhost:8080/identityiq/user/challenge.jsf?id=$challengeId\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the certification.</Description>\n    </Argument>\n    <Argument name=\"entityName\" type=\"string\">\n      <Description>The name of the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>A short description of the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"timeRemaining\" type=\"string\">\n      <Description>The time remaining in the challenge period, formatted as a string.</Description>\n    </Argument>\n    <Argument name=\"challengeId\" type=\"string\">\n      <Description>The database id of the WorkItem representing the challenge.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fa520168',1528809716306,1739425274047,NULL,NULL,NULL,'Account Group Challenge Creation Notification','\n      Email Template for notifying a challenger that they can challenge a certification decision.\n    ',NULL,NULL,NULL,NULL,'Access being removed or limited for \'$entityName\'','It has been determined that permissions on account group \'$entityName\' will be limited or removed\ncompletely.  You have $timeRemaining to challenge this decision.\n\nClick on this link to challenge the decision: http://localhost:8080/identityiq/user/challenge.jsf?id=$challengeId\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object containing the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the certification.</Description>\n    </Argument>\n    <Argument name=\"entityName\" type=\"string\">\n      <Description>The name of the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>A short description of the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"timeRemaining\" type=\"string\">\n      <Description>The time remaining in the challenge period, formatted as a string.</Description>\n    </Argument>\n    <Argument name=\"challengeId\" type=\"string\">\n      <Description>The database id of the WorkItem representing the challenge.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fa7c0169',1528809716348,1739425274506,NULL,NULL,NULL,'Certification Decision Challenged Notification','\n      Email Template for notifying a certifier that a decision has been challenged.\n    ',NULL,NULL,NULL,NULL,'Certification decision for \'$challengeItem\' challenged','$challengerName has challenged the decision for \'$challengeItem\' in $certificationName.\n\nComments from $challengerName:\n--------------------------------------------------------------------------------\n$!challengeComments\n--------------------------------------------------------------------------------\n\nPlease login to IdentityIQ to accept or reject this challenge.\n','<Signature>\n  <Inputs>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>The shortDescription property of the CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the Certification object containing the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"challengerName\" type=\"string\">\n      <Description>The full name (first and last) of the Identity that made the challenge.</Description>\n    </Argument>\n    <Argument name=\"challengeComments\" type=\"string\">\n      <Description>Comments from the challenger.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428faa8016a',1528809716392,1739425274823,NULL,NULL,NULL,'Challenge Accepted','\n      Email Template for notifying a challenger that their challenge was accepted.\n    ',NULL,NULL,NULL,NULL,'Challenge accepted for \'$challengeItem\'','$certifierName has accepted the challenge for \'$challengeItem\' and will change the decision.\n\nComments from $certifierName:\n--------------------------------------------------------------------------------\n$!decisionComments\n--------------------------------------------------------------------------------\n','<Signature>\n  <Inputs>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>The shortDescription property of the CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"decisionComments\" type=\"string\">\n      <Description>Comments to the challenger.</Description>\n    </Argument>\n    <Argument name=\"certifierName\" type=\"string\">\n      <Description>The full name (first and last) of the Identity that accepted the challenge.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fade016b',1528809716446,1739425275556,NULL,NULL,NULL,'Challenge Rejected','\n      Email Template for notifying a challenger that their challenge was rejected.\n    ',NULL,NULL,NULL,NULL,'Challenge rejected for \'$challengeItem\'','$certifierName has rejected the challenge for \'$challengeItem\'.  The decision will remain.\n\nComments from $certifierName:\n--------------------------------------------------------------------------------\n$!rejectionComments\n--------------------------------------------------------------------------------\n','<Signature>\n  <Inputs>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>The shortDescription property of the CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"rejectionComments\" type=\"string\">\n      <Description>Comments to the challenger.</Description>\n    </Argument>\n    <Argument name=\"certifierName\" type=\"string\">\n      <Description>The full name (first and last) of the Identity that rejected the challenge.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428faff016c',1528809716479,1739425275142,NULL,NULL,NULL,'Challenge Expiration','\n      Email Template for notifying a challenger that they can no longer challenge a certification decision.\n    ',NULL,NULL,NULL,NULL,'Challenge expired for \'$challengeItem\'','The challenge period for \'$challengeItem\' has expired.  This certification decision can\nno longer be contested.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>The short description of the CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the certification containing the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fb2a016d',1528809716522,1739425275043,NULL,NULL,NULL,'Challenge Decision Expiration','\n      Email Template for notifying a challenger and certifier that an item that was challenged was not\n      acted upon (accepted or rejected) by the time the challenge period expired, so the decision will\n      stay.\n    ',NULL,NULL,NULL,NULL,'Challenge decision expired for \'$challengeItem\'','The challenge period for the challenged item \'$challengeItem\' has expired without the\ncertifier accepting or rejecting the challenge.  The original decision will stay.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"challengeItem\" type=\"string\">\n      <Description>The short description of the CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"certificationName\" type=\"string\">\n      <Description>The name of the certification containing the item being challenged.</Description>\n    </Argument>\n    <Argument name=\"certification\" type=\"Certification\">\n      <Description>The Certification object.</Description>\n    </Argument>\n    <Argument name=\"certificationItem\" type=\"CertificationItem\">\n      <Description>The CertificationItem being challenged.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem for the challenge</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fb5b016e',1528809716571,1739425277770,NULL,NULL,NULL,'Open Certifications','\n      Email Template for notifying a manager/app owner that they have open certifications outstanding.\n      This is an \"instant\" email sent on demand from the certification dashboard components.\n      See EmailBean and Emailer.compileOpenCertEmail for context.\n    ',NULL,NULL,NULL,NULL,'$certification_count Certification(s) Outstanding','Dear $certifier,\n\nYou have $certification_count certification(s) outstanding.  Please login to\nIdentityIQ to complete your certifications.\n\nSincerely,\nThe Recertification Admin Team\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"certifierName\" type=\"string\">\n      <Description>The full name (first and last) of the Identity that owns certifications.</Description>\n    </Argument>\n    <Argument name=\"certificationCount\" type=\"string\">\n      <Description>The number of certifications the identity owns, passed as a String.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fbd1016f',1528809716689,1739425279224,NULL,NULL,NULL,'Task Result Signoff','\n      Email Template for notifying a signer of a task or report result.\n    ',NULL,NULL,NULL,NULL,'Signoff for $objectType $objectName','Dear $owner,\n\nYou have been requested to signoff on a $objectType result named: $objectName.\nPlease login to IdentityIQ to perform the signoff.\n\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"ownerName\" type=\"string\">\n      <Description>The display name of the Identity that owns the task result and is expected to sign off.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that launched the task.</Description>\n    </Argument>\n    <Argument name=\"objectName\" type=\"string\">\n      <Description>The name of the TaskResult object.</Description>\n    </Argument>\n    <Argument name=\"objectType\" type=\"string\">\n      <Description>Set to \"report\" if this is a report result or \"task\" if this is a general task result.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fc020170',1528809716738,1617791333256,NULL,NULL,NULL,'Default Report Template','\n      Default email template for sending report results.\n      NOTE: There are no input arguments for this template, the report\n      is sent as a PDF and/or csv attachment.\n    ',NULL,NULL,NULL,NULL,'IdentityIQ Report','Please find the requested report file(s) attached to this email.',' '),('4028ab1063f427af0163f428fc390171',1528809716793,1739425278335,NULL,NULL,NULL,'Provisioning Form Notification','\n      Email Template for notifying users when they have provisioning forms to complete.\n      This is used by the Do Provisioning Forms workflow subprocess.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Provisioning Form for $identityDisplayName pending completion','\n      \nA provisioning form for user $identityDisplayName needs to be completed before the provisioning request can be completed.\n\nPlease login to IdentityIQ and view your work item inbox to complete this form at your earliest convenience.\n      \n     ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem representing the review.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name (usually full name) of the Identity that is the target of the provisioning.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fc640172',1528809716836,1739425274154,NULL,NULL,NULL,'Account Selection Notification','\n      Email Template for notifying users when they need to select which accounts\n      a provisioning request should apply to when a user has multiple accounts on\n      an application.\n\n      This is used by the Do Provisioning Forms workflow subprocess.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Account selection required for $identityDisplayName','The accounts that are being targeted for changes must be selected for $identityDisplayName before the provisioning request can be completed.\n\nPlease login to IdentityIQ and view your work item inbox to complete this form at your earliest convenience.','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem representing the account selection.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name (usually full name) of the Identity that is the target of the provisioning.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is the target of the provisioning.</Description>\n    </Argument>\n    <Argument multi=\"true\" name=\"accounts\" type=\"AccountSelection\">\n      <Description>A list of AccountSelection objects for the accounts that need to be selected.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fca90173',1528809716905,1739425279622,NULL,NULL,NULL,'Work Item Assignment','\n      Email Template for notifying work item assignee that they have\n      been assigned a work item.\n    ',NULL,NULL,NULL,NULL,'Work item assigned: $workItemName','#if ($requesterName) $requesterName #{else} The system #{end} has assigned the following work item to you: $workItemName.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem that is being reassigned.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the assignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fcd20174',1528809716946,1739425279410,NULL,NULL,NULL,'Work Item Assignment Removal','\n      Email Template for notifying work item assignee that a workitem has been removed\n      from their queue.\n    ',NULL,NULL,NULL,NULL,'Work item assignment removed: $workItemName','#if ($requesterName) $requesterName #{else} The system #{end} has removed the following work item from your queue: $workItemName.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem that is being reassigned.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the assignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fcfe0175',1528809716990,1739425278503,NULL,NULL,NULL,'Remediation Item Assignment','\n      Email Template for notifying remediation item assignee that they have\n      been assigned a remediation item.\n    ',NULL,NULL,NULL,NULL,'Remediation item assigned: $workItemName','#if ($requesterName) $requesterName #{else} The system #{end} has assigned the following remediation item to you: $remediationItemName. This item is contained within the work item $workItemName.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"remediationItem\" type=\"RemediationItem\">\n      <Description>The RemediationItem that is being reassigned.</Description>\n    </Argument>\n    <Argument name=\"remediationItemName\" type=\"string\">\n      <Description>The description property of the remediationItem.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The parent WorkItem of the RemediationItem being reassigned.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the assignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fd2a0176',1528809717034,1739425278421,NULL,NULL,NULL,'Remediation Item Assignment Removal','\n      Email Template for notifying remediation item assignee that a remediation item has been removed\n      from their queue.\n    ',NULL,NULL,NULL,NULL,'Remediation item assignment removed: $workItemName','#if ($requesterName) $requesterName #{else} The system #{end} has removed the following remediation item from your queue: $remediationItemName. This item is contained within the work item $workItemName.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"remediationItem\" type=\"RemediationItem\">\n      <Description>The RemediationItem that is being reassigned.</Description>\n    </Argument>\n    <Argument name=\"remediationItemName\" type=\"string\">\n      <Description>The description property of the remediationItem.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The parent WorkItem of the RemediationItem being reassigned.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the assignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fe0d0177',1528809717262,1739425273911,NULL,NULL,NULL,'Access Request Reminder','\n      Email template used to notify work item owner of pending work item for access request.\n    ',NULL,NULL,NULL,NULL,'Access Request requires completion of Work Item ID : $workItemName','You have a pending work item that requires attention. Work Item: $workItemDescription','<Signature>\n  <Inputs>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property (also the name property) of the request WorkItem.</Description>\n    </Argument>\n    <Argument name=\"workItemDescription\" type=\"string\">\n      <Description>The WorkItem description.</Description>\n    </Argument>\n    <Argument name=\"workItem\" type=\"WorkItem\">\n      <Description>The WorkItem object for the request.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fe6f0178',1528809717359,1739425279285,NULL,NULL,NULL,'Task Status','\n    Email Template for notifying result of Task.\n  ',NULL,NULL,NULL,NULL,'Task $taskName Status - $status ','\nThe \'$taskName\' task#if ($status == \"Success\" ) ended successfully.#{end}#if ($status == \"Warning\" ) ended with warning.#{end}#if ($status == \"Terminated\" ) terminated.#{end}#if ($status == \"Error\" ) ended with error.#{end}\n\n     \n       Started : $spTools.formatDate($taskStartTime,3,1)\nCompleted : $spTools.formatDate($taskEndTime,3,1)\n\n#foreach ($msg in $message)\n$msg\n#end\n\nFor more details, please check - http://localhost:8080/identityiq/monitor/tasks/renderResults.jsf?TaskResultId=$resultId\n\n  ','<Signature>\n  <Inputs>\n    <Argument name=\"taskResult\" type=\"TaskResult\">\n      <Description>Task Result</Description>\n    </Argument>\n    <Argument name=\"taskName\" type=\"string\">\n      <Description>Task Name</Description>\n    </Argument>\n    <Argument name=\"taskDesc\" type=\"string\">\n      <Description>Task Description</Description>\n    </Argument>\n    <Argument name=\"taskStartTime\" type=\"date\">\n      <Description>Time when task is started</Description>\n    </Argument>\n    <Argument name=\"taskEndTime\" type=\"date\">\n      <Description>Time when task is completed.</Description>\n    </Argument>\n    <Argument name=\"status\" type=\"string\">\n      <Description>Task Status</Description>\n    </Argument>\n    <Argument multi=\"true\" name=\"message\" type=\"string\">\n      <Description>List of Messages</Description>\n    </Argument>\n    <Argument name=\"resultId\" type=\"string\">\n      <Description>Task Result Id</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fe940179',1528809717396,1739425278853,NULL,NULL,NULL,'Report Completion','\n      Email Template for notifying report scheduler that the report execution is complete.\n    ',NULL,NULL,NULL,NULL,'Report execution complete','Your report \'$reportName\' has completed. You may retrieve your report by clicking on the Report Results tab under Analyze -> Reports.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"reportName\" type=\"string\">\n      <Description>Name of the report that was completed</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f428fec8017a',1528809717448,1739425274272,NULL,NULL,NULL,'Alert Notification','\n    Email Template for notifying configured user(s) when an Alert has been acted upon.\n  ',NULL,NULL,NULL,NULL,'Alert Notification','Alert \'$alert.name\'#if ($alert.displayName != null) [\'$alert.displayName\']#{end}  has been received#if ($alert.targetType != null ) for \'$alert.targetType\' \'$alert.targetDisplayName\'#{end}.\n  ','<Signature>\n  <Inputs>\n    <Argument name=\"alert\" type=\"Alert\">\n      <Description>The alert object being acted upon.</Description>\n    </Argument>\n    <Argument name=\"alertDefinitionName\" type=\"string\">\n      <Description>Name of the Alert Definition triggering the action.</Description>\n    </Argument>\n    <Argument name=\"errorMessage\" type=\"string\">\n      <Description>Optional message containing more meaningful insight upon error</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f42902fa017f',1528809718522,1739425277853,NULL,NULL,NULL,'Pending Manual Changes','\n      Email Template for notifying approvers when they need to do perform an account action manually\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Changes requested to $identityDisplayName need manual interaction','\n      \n$launcher is requesting the following changes for \'$identityDisplayName\' be manually made by you.\n\n#if ( $approvalSet.items )\n#foreach ($item in $approvalSet.items)\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n       \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"Workitem\">\n      <Description>The WorkItem representing the review.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the work item.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is being changed.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f42905cf0184',1528809719247,1739425279042,NULL,NULL,NULL,'Role Modeler - Impact Analysis Review','\n    Email Template for notifying role impact analysis reviewers.\n    Note that in addition to the declared arguments, all workflow variables,\n    Step arguments, and Approval arguments defined in the Workflow are\n    also available.\n  ',NULL,NULL,NULL,NULL,'Review impact analysis of role: $(roleName)','An impact analysis of role \'$(roleName)\' has been assigned to you.\n\nLogin and view your work item inbox to complete this review.\n  ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\">\n      <Description>The WorkItem representing the review</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"roleName\" type=\"string\">\n      <Description>The name of the role being analyzed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f42906970186',1528809719448,1739425278944,NULL,NULL,NULL,'Role Modeler - Approval','\n    Email Template for notifying role approvers of a new work item.\n    Note that in addition to the declared arguments, all workflow variables,\n    Step arguments, and Approval arguments defined in the Workflow are\n    also available.\n  ',NULL,NULL,NULL,NULL,'Approve modification to role: $(roleName)','An approval is required for a modification of the role \'$(roleName)\' made by $(launcher).  \n\nLogin and view your work item inbox to complete this approval.\n  ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\">\n      <Description>The WorkItem representing the review</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"roleName\" type=\"string\">\n      <Description>The name of the role being analyzed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290b070190',1528809720583,1739425276151,NULL,NULL,NULL,'LCM Identity Update Approval','\n      Email Template for notifying approvers when they need to approve a request made through LCM.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Changes requested to $identityDisplayName need approval ','\n      \n$launcher is requesting the following changes for \'$identityDisplayName\'\n\n#if ( $approvalSet.items )\n#foreach ($approvalItem in $approvalSet.items)\n        Application: $approvalItem.applicationName\n#if ( $approvalItem.nativeIdentity )       \n           Account : $approvalItem.nativeIdentity\n#end           \n#if ( $approvalItem.instance ) \n          Instance : $approvalItem.instance\n#end\n          Operation: $approvalItem.operation\n#if ( $approvalItem.displayName )          \n          Attribute: $approvalItem.displayName\n#elseif ( $approvalItem.name ) \n          Attribute: $approvalItem.name\n#end          \n#if ( $approvalItem.displayValue )\n           Value(s): $approvalItem.displayValue\n#elseif ( $approvalItem.csv ) \n           Value(s): $approvalItem.csv\n#end\n#if ( $item.level )\n           Priority: $item.level\n#else\n           Priority: Normal\n#end \n#if ( $approvalItem.requesterComments )\n Requester Comments: $approvalItem.requesterComments\n#end\n#end\n#end\n       \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem representing the review.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the work item.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is being changed.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290d490193',1528809721161,1739425277438,NULL,NULL,NULL,'LCM User Notification','\n      Email Template for notifying users when accounts have been changed through Life Cycle Manager.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Changes to your Identity were processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \n$launcher requested the following account changes to your identity \'$identityDisplayName\' and they were APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \n$launcher requested the following account changes to your identity \'$identityDisplayName\' and they were REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.rejecters\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\n$launcher requested the following account changes to your identity \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n\n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290db30194',1528809721267,1739425277364,NULL,NULL,NULL,'LCM Requester Notification','\n      Email Template for notifying requesters when their employee\'s account(s) are modified.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Account changes you requested for $identityDisplayName were processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \nThe following changes you requested for identity \'$identityDisplayName\' were APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \nThe following changes you requested for identity \'$identityDisplayName\' were REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.rejecters\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\nThe following are the changes you requested for identity \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n\n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n      \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290df30195',1528809721331,1739425276208,NULL,NULL,NULL,'LCM Manager Notification','\n      Email Template for notifying managers when an employee\'s account(s) are modified.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Account changes for $identityDisplayName were processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \n$launcher requested the following account changes for employee \'$identityDisplayName\' and they were APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \n$launcher requested the following account changes for employee \'$identityDisplayName\' and they were REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.rejecters\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\n$launcher requested the following changes for employee \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n\n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n      \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290e170196',1528809721367,1739425274362,NULL,NULL,NULL,'Batch Approval','\n      Email Template for notifying approvers when they need to approve a request made through LCM.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Changes requested to $identityDisplayName need approval ','\n      \n$launcher is requesting approval to run in a batch request file.\n\n#if ( $approvalSet.items )\n#foreach ($item in $approvalSet.items)\n    Content Preview: $item.displayValue\n#end\n#end\n       \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem representing the review.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the work item.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290e910197',1528809721489,1739425277162,NULL,NULL,NULL,'LCM Registration User Notification','\n      Email Template for notifying users when registration requests are completed.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Your registration request has been processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \nThe following registration request for your identity \'$identityDisplayName\' was APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \nThe following registration request for your identity \'$identityDisplayName\' was REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.owner\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\nThe following is the registration request for your identity \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n\n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is registering.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is registering.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290ed20198',1528809721555,1739425276918,NULL,NULL,NULL,'LCM Registration Manager Notification','\n      Email Template for notifying managers when an employee\'s registration request is completed.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Registration request for $identityDisplayName has been processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \nThe following registration request for employee \'$identityDisplayName\' was APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \nThe following registration request for employee \'$identityDisplayName\' was REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.owner\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\nThe following is the registration request for employee \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n \n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n      \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is registering.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is registering.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290efd0199',1528809721597,1739425277063,NULL,NULL,NULL,'LCM Registration Security Officer Notification','\n      Email Template for notifying security officers when a registration request is completed.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Registration request for $identityDisplayName has been processed','\n      \n#if ( $approvalSet )\n#if ( $approvalSet.hasApproved() ) \nThe following registration request for identity \'$identityDisplayName\' was APPROVED.\n\n#foreach ($item in $approvalSet.approved)\n#if ( $item.owner && $item.owner != $launcher ) \n        Approved By: $item.owner\n#end\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n#if ( $approvalSet.hasRejected() ) \nThe registration request for identity \'$identityDisplayName\' was REJECTED.\n\n#foreach ($item in $approvalSet.rejected)\n        Rejected By: $item.owner\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n\n#end\n#end\n## \n## Handle case where the items are not approved or rejected when the\n## approvalScheme is none.\n##\n#if ( $approvalScheme == \"none\" )\nThe following are the changes requested for identity \'$identityDisplayName\' and the request required no approval because approvals are disabled.\n\n#foreach ($item in $approvalSet.items)\n#if ( $item.comments)\n#foreach ($comment in $item.comments)\nCompletion Comments: $comment\n#end\n#end\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue )\n           Value(s): $item.displayValue\n#elseif ( $item.csv ) \n           Value(s): $item.csv\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n#end\n      \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is registering.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is registering.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290f2d019a',1528809721645,1739425276487,NULL,NULL,NULL,'LCM Registration Approval','\n      Email Template for notifying approvers when they need to approve a registration request.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Registration request for $identityDisplayName needs approval','\n      \nA user is attempting to register a new identity for \'$identityDisplayName\'.\n\n#if ( $approvalSet.items )\n#foreach ($approvalItem in $approvalSet.items)\n        Application: $approvalItem.applicationName\n#if ( $approvalItem.nativeIdentity )       \n           Account : $approvalItem.nativeIdentity\n#end           \n#if ( $approvalItem.instance ) \n          Instance : $approvalItem.instance\n#end\n          Operation: $approvalItem.operation\n#if ( $approvalItem.displayName )          \n          Attribute: $approvalItem.displayName\n#elseif ( $approvalItem.name ) \n          Attribute: $approvalItem.name\n#end          \n#if ( $approvalItem.displayValue )\n           Value(s): $approvalItem.displayValue\n#elseif ( $approvalItem.csv ) \n           Value(s): $approvalItem.csv\n#end\n#if ( $item.level )\n           Priority: $item.level\n#else\n           Priority: Normal\n#end \n#if ( $approvalItem.requesterComments )\n Requester Comments: $approvalItem.requesterComments\n#end\n#end\n#end\n       \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem representing the review.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the work item.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is registering.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is registering.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4290fd1019b',1528809721809,1739425276367,NULL,NULL,NULL,'LCM Password Change Notification','\n      Email Template for notifying user\'s when their password has been changed.\n      Note that in addition to the declared arguments, all workflow variables,\n      Step arguments, and Approval arguments defined in the Workflow are\n      also available.\n    ',NULL,NULL,NULL,NULL,'Password Changes to $identityDisplayName','\n      \n\n#if ( $launcher != $identityName && $launcher != \"SailPointContextRequestFilter\" )\n$launcher requested the following password changes be made to your account(s).\n#else\nThe following password changes were made to your account(s) at your request.\n#end\n\n#if ( $approvalSet.items )\n#foreach ($item in $approvalSet.items)\n        Application: $item.applicationName\n#if ( $item.nativeIdentity )       \n           Account : $item.nativeIdentity\n#end           \n#if ( $item.instance ) \n          Instance : $item.instance\n#end\n          Operation: $item.operation\n#if ( $item.displayName )          \n          Attribute: $item.displayName\n#elseif ( $item.name ) \n          Attribute: $item.name\n#end\n#if ( $item.displayValue)\n           Value(s): $item.displayValue\n#end\n#if ( $item.requesterComments )\n Requester Comments: $item.requesterComments\n#end\n#end\n#end\n       \n    ','<Signature>\n  <Inputs>\n    <Argument name=\"workflow\" type=\"Workflow\">\n      <Description>The Workflow object being executed.</Description>\n    </Argument>\n    <Argument name=\"approvalSet\" type=\"ApprovalSet\">\n      <Description>The ApprovalSet object contained in the workflow.</Description>\n    </Argument>\n    <Argument name=\"launcher\" type=\"string\">\n      <Description>The name of the Identity that launched the workflow.</Description>\n    </Argument>\n    <Argument name=\"identityName\" type=\"string\">\n      <Description>The name of the Identity that is being changed.</Description>\n    </Argument>\n    <Argument name=\"identityDisplayName\" type=\"string\">\n      <Description>The display name of the Identity that is being changed.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1063f427af0163f4291029019c',1528809721897,1739425277679,NULL,NULL,NULL,'Native Account Change Manager Notification','\n    ',NULL,NULL,NULL,NULL,'IdentityIQ detected native changes on $identityName','\n            \nIdentityIQ detected the following native changes on your accounts:\n\n#if ( $event.nativeChanges)\n#foreach ($change in $event.nativeChanges)\n\n       Operation  : $change.operation\n       Application: $change.applicationName\n#if ( $change.nativeIdentity )       \n           Account : $change.nativeIdentity\n#end \n#if ( $change.instance ) \n          Instance : $change.instance\n#end               \n#if ( $change.differences )\n#foreach ($difference in $change.differences)\n            Attribute      : $difference.attribute\n#if ( not $difference.multi)\n#if ( $difference.newValue )\n            New Value(s) : $difference.newValue\n#end\n#end\n#if ( $difference.multi)\n#if ( $difference.addedValues ) \n            Added Value(s) : $difference.addedValues\n#end\n#if ( $difference.removedValues )\n            Removed Value(s) : $difference.removedValues\n#end\n#end\n#end \n#end \n#end \n#end  \n\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"event\" type=\"Workflow\">\n      <Description>Identity Change Event, which will have a list of \n            NativeChangeDetections on it. \n          </Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('4028ab1068cc9d780168cd11b7c90003',1549628717002,NULL,NULL,NULL,NULL,'Test Template','\n      Email Template for notifying work item assignee that they have\n      been assigned a work item.\n    ',NULL,NULL,NULL,NULL,'Work item assigned: $workItemName','#if ($requesterName) $requesterName #{else} The system #{end} has assigned the following work item to you: $workItemName.\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"item\" type=\"WorkItem\">\n      <Description>The WorkItem that is being reassigned.</Description>\n    </Argument>\n    <Argument name=\"workItemName\" type=\"string\">\n      <Description>The description property of the WorkItem.</Description>\n    </Argument>\n    <Argument name=\"requesterName\" type=\"string\">\n      <Description>The display name of the Identity that requested the assignment.</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('a9fe0bbd78ab1f7e8178abe0b62a0006',1617791333930,NULL,NULL,NULL,NULL,'Sunset Expiration Reminder','\n    Email Template for notifying the requestee and requestor when a Role or Entitlement is about to be sunsetted.\n  ',NULL,NULL,NULL,NULL,'Access Expiration Reminder','#if ($role)Role $role #{else}Entitlement $entitlement #{end}belonging to $requestee which was requested by $requestor will be removed on $sunsetDate\n  ','<Signature>\n  <Inputs>\n    <Argument name=\"requestor\" type=\"string\">\n      <Description>The Identity of the original request to sunset the role or entitlement</Description>\n    </Argument>\n    <Argument name=\"requestee\" type=\"string\">\n      <Description>The Identity that the role or entitlement belongs to</Description>\n    </Argument>\n    <Argument name=\"role\" type=\"string\">\n      <Description>The name of the role</Description>\n    </Argument>\n    <Argument name=\"entitlement\" type=\"string\">\n      <Description>The name of the entitlement</Description>\n    </Argument>\n    <Argument name=\"sunsetDate\" type=\"date\">\n      <Description>The date that the role or entitlement will be removed on</Description>\n    </Argument>\n  </Inputs>\n</Signature>\n'),('a9fe0bbd92b219cc8192b2b953d40036',1729575343060,1739425279138,NULL,NULL,NULL,'SailPoint - Test Email Sending','\n      Sample Email.\n    ',NULL,NULL,NULL,NULL,'Sample Email','Sample EmailTemplate $testField1\n    ','<Signature>\n  <Inputs>\n    <Argument name=\"testField1\" type=\"String\"/>\n  </Inputs>\n</Signature>\n'),('a9fe0bbd92f5112a819305431dd80674',1730960104920,1739425279352,NULL,NULL,NULL,'Test Email Sending',NULL,NULL,NULL,NULL,NULL,'Sample Email Sending','\n	<html>\n		<body>\n		#set($spctx=$spTools.class.forName(\"sailpoint.api.SailPointFactory\").getMethod(\"getFactory\", null).invoke(null, null).getCurrentContext())\n		#set ($rule = $spctx.getObjectByName($spTools.class.forName(\"sailpoint.object.Rule\"), \"GetManagedAttribute\") ) \n		#set ($ruleArgs=$spTools.class.forName(\"java.util.HashMap\").newInstance())\n   \n		#set ($wfcontext = $ruleArgs.put(\"managedAttributeValue\", \"cn=admins,ou=group,o=Company\") )\n		#set( $ruleOutput = $spctx.runRule($rule, $ruleArgs) ) \n   \n		<p> <b> $ruleOutput</b> </p>\n    \n\n		</body>\n	</html>\n	',' '),('a9fe0bbd92f5112a8193054eb339068c',1730960864057,1739425276069,NULL,NULL,NULL,'EmailTemplate Example 1',NULL,NULL,NULL,NULL,NULL,'Sample Email','\n	<html>\n    <body>\n    #set($spctx=$spTools.class.forName(\"sailpoint.api.SailPointFactory\").getMethod(\"getFactory\", null).invoke(null, null).getCurrentContext())\n    #set($identityRequest = $spctx.getObjectByName($spTools.class.forName(\"sailpoint.object.IdentityRequest\"), $identityRequestId) )\n    #set($id = $spctx.getObjectByName($spTools.class.forName(\"sailpoint.object.Identity\"), $identityName) )\n\n\n    #set($requester = $identityRequest.requesterDisplayName)\n    #set( $identity = $spctx.getObjectByName($spTools.class.forName(\"sailpoint.object.Identity\"), $identityName) )\n\n    <p>\n    <b>Requester $identityRequest.requesterDisplayName</b>\n    </p>\n\n    <p>\n    User: $identity.displayableName\n    </p>\n\n\n    <table>\n    #foreach ($failureMessage in $failureMessages.keySet())\n    <tr><td>$failureMessage</td>\n\n    #set ( $failuresList = [] )\n\n    #foreach($message in $failureMessages.get($failureMessage).split(\",\"))\n\n    #set($failures = $failuresList.add($message))\n    #end\n\n    <td>$failuresList.get(0)</td>\n    <td>$failuresList.get(1)</td>\n    <td>$failuresList.get(2)</td>\n    <td>$failuresList.get(3)</td></tr>\n\n    #end\n    </table>\n    \n    Identity Request Id:  #if( $identityRequestId && $!identityRequestId != \'\') \"$identityRequestId\"  #end</br>\n    \n    </body>\n    </html>\n\n	','<Signature>\n  <Inputs>\n    <Argument name=\"identityRequest\" type=\"String\"/>\n    <Argument name=\"identityName\" type=\"String\"/>\n  </Inputs>\n</Signature>\n'),('a9fe0bbd97a01e0b8197ab41d0900947',1750924906640,1750924971335,NULL,NULL,NULL,'SupportPluginTemplate','\n      Email Template for sending zip file with results from Support Plugin.\n    ',NULL,NULL,NULL,NULL,'Support Plugin Results','Please find attached the Support Plugin results.',' ');
/*!40000 ALTER TABLE `spt_email_template` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-08-18 12:50:18
