-- MySQL dump 10.13  Distrib 8.0.17, for Win64 (x86_64)
--
-- Host: localhost    Database: identityiq
-- ------------------------------------------------------
-- Server version	5.7.22-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `spt_jasper_result`
--

DROP TABLE IF EXISTS `spt_jasper_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `spt_jasper_result` (
  `id` varchar(32) NOT NULL,
  `created` bigint(20) DEFAULT NULL,
  `modified` bigint(20) DEFAULT NULL,
  `owner` varchar(32) DEFAULT NULL,
  `assigned_scope` varchar(32) DEFAULT NULL,
  `assigned_scope_path` varchar(450) DEFAULT NULL,
  `handler_id` varchar(128) DEFAULT NULL,
  `print_xml` longtext,
  `page_count` int(11) DEFAULT NULL,
  `pages_per_bucket` int(11) DEFAULT NULL,
  `handler_page_count` int(11) DEFAULT NULL,
  `attributes` longtext,
  PRIMARY KEY (`id`),
  KEY `FKF4B7413486634B7` (`assigned_scope`),
  KEY `FKF4B7413A5FB1B1` (`owner`),
  KEY `SPT_IDXA5EE253FB5399952` (`assigned_scope_path`(255)),
  CONSTRAINT `FKF4B7413486634B7` FOREIGN KEY (`assigned_scope`) REFERENCES `spt_scope` (`id`),
  CONSTRAINT `FKF4B7413A5FB1B1` FOREIGN KEY (`owner`) REFERENCES `spt_identity` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `spt_jasper_result`
--

LOCK TABLES `spt_jasper_result` WRITE;
/*!40000 ALTER TABLE `spt_jasper_result` DISABLE KEYS */;
INSERT INTO `spt_jasper_result` VALUES ('4028ab10671c24ba01671c4c32a70009',1542368015015,1542368016572,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>1</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('4028ab1068cc9d780168daec8d380098',1549861162296,1549861164344,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>1</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192b7b6a6840022',1729659053701,1729659054618,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>3</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192b7f29d7a0092',1729662983547,1729662985048,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"chart\">\n      <value>\n        <Chart category=\"application.name\" groupBy=\"application.name\" title=\"Uncorrelated Accounts by Application\" type=\"pie\" value=\"count(*)\">\n          <Attributes>\n            <Map>\n              <entry key=\"chartData\">\n                <value>\n                  <List>\n                    <Map>\n                      <entry key=\"category\" value=\"HR System\"/>\n                      <entry key=\"value\">\n                        <value>\n                          <Long>1</Long>\n                        </value>\n                      </entry>\n                    </Map>\n                    <Map>\n                      <entry key=\"category\" value=\"LDAP\"/>\n                      <entry key=\"value\">\n                        <value>\n                          <Long>1</Long>\n                        </value>\n                      </entry>\n                    </Map>\n                  </List>\n                </value>\n              </entry>\n            </Map>\n          </Attributes>\n        </Chart>\n      </value>\n    </entry>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Uncorrelated Accounts Report\">\n          <Chart category=\"application.name\" groupBy=\"application.name\" title=\"rept_uncorrelated_ids_chart_title\" type=\"pie\" value=\"count(*)\"/>\n          <DataSource objectType=\"sailpoint.object.Link\" type=\"Filter\">\n            <QueryParameters>\n              <Parameter argument=\"correlatedApps\" property=\"application.id\"/>\n              <Parameter defaultValue=\"false\" property=\"identity.correlated\" valueClass=\"boolean\"/>\n              <Parameter defaultValue=\"false\" property=\"identity.inactive\" valueClass=\"boolean\"/>\n              <Parameter defaultValue=\"false\" property=\"application.authoritative\" valueClass=\"boolean\"/>\n              <Parameter defaultValue=\"false\" property=\"application.logical\" valueClass=\"boolean\"/>\n            </QueryParameters>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"identity\" header=\"Identity\" property=\"identity.name\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"account\" header=\"Account\" property=\"nativeIdentity\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"firstName\" header=\"First Name\" property=\"identity.firstname\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"lastName\" header=\"Last Name\" property=\"identity.lastname\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"lastRefresh\" header=\"Last Refresh\" property=\"identity.lastRefresh\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"applicationName\" header=\"Application Name\" property=\"application.name\" sortable=\"true\" width=\"122\"/>\n          </Columns>\n          <ReportSummary title=\"Uncorrelated Account Details\">\n            <DataSourceScript>\n              <Source>\n                        \n                        import java.util.*;\n                        import sailpoint.tools.Util;\n                        import java.lang.Math;\n                        import sailpoint.object.*;\n                        import sailpoint.api.ObjectUtil;\n\n                        QueryOptions ops = new QueryOptions();\n                        ops.addGroupBy(\"correlated\");\n\n                        String sources = \"\";\n                        if (reportArgs.containsKey(\"correlatedApps\")){\n                           List apps = reportArgs.getList(\"correlatedApps\");\n                           if (apps != null){\n                             ops.addFilter(Filter.in(\"links.application.id\", apps));\n                             List appNames = ObjectUtil.convertIdsToNames(context, Application.class, apps);\n                             sources = Util.listToCsv(appNames);\n                           }\n                        }\n\n                        List fields = new ArrayList();\n                        fields.add(\"correlated\");\n                        fields.add(\"count(distinct id)\");\n\n                        int correlated = 0;\n                        int uncorrelated = 0;\n                        Iterator results = context.search(Identity.class, ops, fields);\n                        while(results.hasNext()){\n                            Object[] row = results.next();\n                            int count = Util.otoi(row[1]);\n                            if ((Boolean)row[0]){\n                                correlated += count;\n                            } else {\n                                uncorrelated += count;\n                            }\n                        }\n\n                        int totalIdentities =  correlated + uncorrelated;\n                        float percent =  totalIdentities != 0 ? (float)uncorrelated/totalIdentities : 0;\n                        String percentString = ((int)Math.floor(percent * 100)) +  \"%\";\n\n                        Map map = new HashMap();\n                        map.put(\"sources\", sources);\n                        map.put(\"correlatedIdentities\", correlated);\n                        map.put(\"uncorrelatedIdentities\", uncorrelated);\n                        map.put(\"totalIdentities\", totalIdentities);\n                        map.put(\"percentCorrelated\", percentString);\n\n                        return map;\n                        \n                      </Source>\n            </DataSourceScript>\n            <Values>\n              <LiveReportSummaryValue label=\"rept_uncorrelated_ids_grid_label_auth_sources\" name=\"sources\"/>\n              <LiveReportSummaryValue label=\"rept_uncorrelated_ids_summary_correlated\" name=\"correlatedIdentities\"/>\n              <LiveReportSummaryValue label=\"rept_uncorrelated_ids_summary_uncorrelated\" name=\"uncorrelatedIdentities\"/>\n              <LiveReportSummaryValue label=\"rept_uncorrelated_ids_summary_total_ids\" name=\"totalIdentities\"/>\n              <LiveReportSummaryValue label=\"rept_uncorrelated_ids_summary_percent\" name=\"percentCorrelated\"/>\n            </Values>\n          </ReportSummary>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>2</Integer>\n      </value>\n    </entry>\n    <entry key=\"summary\">\n      <value>\n        <LiveReportSummary title=\"Uncorrelated Account Details\">\n          <DataSourceScript>\n            <Source>\n                        \n                        import java.util.*;\n                        import sailpoint.tools.Util;\n                        import java.lang.Math;\n                        import sailpoint.object.*;\n                        import sailpoint.api.ObjectUtil;\n\n                        QueryOptions ops = new QueryOptions();\n                        ops.addGroupBy(\"correlated\");\n\n                        String sources = \"\";\n                        if (reportArgs.containsKey(\"correlatedApps\")){\n                           List apps = reportArgs.getList(\"correlatedApps\");\n                           if (apps != null){\n                             ops.addFilter(Filter.in(\"links.application.id\", apps));\n                             List appNames = ObjectUtil.convertIdsToNames(context, Application.class, apps);\n                             sources = Util.listToCsv(appNames);\n                           }\n                        }\n\n                        List fields = new ArrayList();\n                        fields.add(\"correlated\");\n                        fields.add(\"count(distinct id)\");\n\n                        int correlated = 0;\n                        int uncorrelated = 0;\n                        Iterator results = context.search(Identity.class, ops, fields);\n                        while(results.hasNext()){\n                            Object[] row = results.next();\n                            int count = Util.otoi(row[1]);\n                            if ((Boolean)row[0]){\n                                correlated += count;\n                            } else {\n                                uncorrelated += count;\n                            }\n                        }\n\n                        int totalIdentities =  correlated + uncorrelated;\n                        float percent =  totalIdentities != 0 ? (float)uncorrelated/totalIdentities : 0;\n                        String percentString = ((int)Math.floor(percent * 100)) +  \"%\";\n\n                        Map map = new HashMap();\n                        map.put(\"sources\", sources);\n                        map.put(\"correlatedIdentities\", correlated);\n                        map.put(\"uncorrelatedIdentities\", uncorrelated);\n                        map.put(\"totalIdentities\", totalIdentities);\n                        map.put(\"percentCorrelated\", percentString);\n\n                        return map;\n                        \n                      </Source>\n          </DataSourceScript>\n          <Values>\n            <LiveReportSummaryValue label=\"Source Application(s)\" name=\"sources\">\n              <Value>\n                <String>LDAP, HR System</String>\n              </Value>\n            </LiveReportSummaryValue>\n            <LiveReportSummaryValue label=\"Correlated Identities\" name=\"correlatedIdentities\">\n              <Value>\n                <Integer>6</Integer>\n              </Value>\n            </LiveReportSummaryValue>\n            <LiveReportSummaryValue label=\"Uncorrelated Identities\" name=\"uncorrelatedIdentities\">\n              <Value>\n                <Integer>2</Integer>\n              </Value>\n            </LiveReportSummaryValue>\n            <LiveReportSummaryValue label=\"Total Identities\" name=\"totalIdentities\">\n              <Value>\n                <Integer>8</Integer>\n              </Value>\n            </LiveReportSummaryValue>\n            <LiveReportSummaryValue label=\"Percent Uncorrelated\" name=\"percentCorrelated\">\n              <Value>\n                <String>25%</String>\n              </Value>\n            </LiveReportSummaryValue>\n          </Values>\n        </LiveReportSummary>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192b8855fe60179',1729672601574,1729672601901,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>3</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192b88a4c560186',1729672924247,1729672924783,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>6</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192bd9383e803d3',1729757414376,1729757415177,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"IdentityRequest Report\">\n          <DataSource type=\"Hql\">\n            <Query>from IdentityRequest rid where rid.type in (\'Joiner\', \'Leaver\')</Query>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"RequestID\" header=\"Request ID\" property=\"rid.name\" width=\"183\"/>\n            <ReportColumnConfig field=\"Requester\" header=\"Requester\" property=\"rid.requesterDisplayName\" width=\"183\"/>\n            <ReportColumnConfig field=\"Requestee\" header=\"Requestee\" property=\"rid.targetDisplayName\" width=\"183\"/>\n            <ReportColumnConfig field=\"Requestee EmployeeType\" header=\"Requestee EmployeeType\" property=\"rid.targetId\" width=\"183\">\n              <RenderScript>\n                <Source>\n				import sailpoint.object.*; \n				\n				if(value != null){\n				Identity identity =  context.getObjectById( Identity.class, value );\n				return identity.getAttribute(\"employeeType\");\n				\n				}else {\n				return \"NA\";\n				}\n			  \n			  </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>8</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192bd95bc1503da',1729757559829,1729757560333,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Audit Report\">\n          <DataSource objectType=\"AuditEvent\" type=\"Filter\">\n            <QueryParameters>\n              <Parameter argument=\"creationDateStart\" operation=\"GT\" property=\"created\"/>\n              <Parameter argument=\"creationDateEnd\" operation=\"LT\" property=\"created\"/>\n            </QueryParameters>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"created\" header=\"Date\" property=\"created\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"action\" header=\"Action\" property=\"action\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"source\" header=\"Source\" property=\"source\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"target\" header=\"Target\" property=\"target\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"string1\" header=\"String 1\" property=\"string1\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"string2\" header=\"String 2\" property=\"string2\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"string3\" header=\"String 3\" property=\"string3\" sortable=\"true\" width=\"118\"/>\n            <ReportColumnConfig field=\"string4\" header=\"String 4\" property=\"string4\" sortable=\"true\" width=\"118\"/>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>13</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd92b71d768192c3057d5805f4',1729848769880,1729848770720,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"User Details Report\">\n          <DataSource defaultSort=\"name\" objectType=\"Identity\" type=\"Filter\">\n            <QueryParameters>\n              <Parameter argument=\"lastRefresh\" property=\"lastRefresh\" valueClass=\"daterange\"/>\n              <Parameter argument=\"lastLogin\" property=\"lastLogin\" valueClass=\"daterange\"/>\n              <Parameter argument=\"identityApplications\" property=\"links.application.id\"/>\n              <Parameter argument=\"capabilities\" property=\"capabilities.id\"/>\n              <Parameter argument=\"identityRoles\">\n                <QueryScript>\n                  <Source>\n                            import sailpoint.object.*;\n                            import java.lang.*;\n                            List roleFilters = new ArrayList();\n                            if (value != null){\n                              for(String role : value){\n                                roleFilters.add(Filter.eq(\"bundles.id\", role));\n                                roleFilters.add(Filter.eq(\"assignedRoles.id\", role));\n                              }\n\n                              if (!roleFilters.isEmpty())\n                                queryOptions.addFilter(Filter.subquery(\"id\", Identity.class, \"id\", Filter.or(roleFilters)));\n                            }\n                            return queryOptions;\n                          </Source>\n                </QueryScript>\n              </Parameter>\n              <Parameter argument=\"groupDefinitions\">\n                <QueryScript>\n                  <Source>\n                            import sailpoint.object.*;\n                            import sailpoint.reporting.*;\n                            Filter f = ReportingLibrary.getGroupDefinitionFilter(context, value, false);\n                            if(f!=null) {\n                                queryOptions.addFilter(f);\n                            }\n                            return queryOptions;\n                          </Source>\n                </QueryScript>\n              </Parameter>\n              <Parameter argument=\"_attr_firstname\" ignoreCase=\"true\" property=\"firstname\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_lastname\" ignoreCase=\"true\" property=\"lastname\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_displayName\" ignoreCase=\"true\" property=\"displayName\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_email\" ignoreCase=\"true\" property=\"email\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_manager\" ignoreCase=\"true\" property=\"manager\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_inactive\" property=\"inactive\" valueClass=\"boolean\"/>\n              <Parameter argument=\"_attr_uid\" ignoreCase=\"true\" property=\"uid\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_employeenumber\" ignoreCase=\"true\" property=\"employeenumber\" valueClass=\"string\"/>\n              <Parameter argument=\"_attr_employeeType\" ignoreCase=\"true\" property=\"employeeType\" valueClass=\"string\"/>\n            </QueryParameters>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"identity\" header=\"Username\" property=\"name\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"lastName\" header=\"Last Name\" property=\"lastname\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"firstName\" header=\"First Name\" property=\"firstname\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"manager\" header=\"Manager\" property=\"manager.displayName\" sortable=\"true\" width=\"122\"/>\n            <ReportColumnConfig field=\"roles\" header=\"Roles\" property=\"id\" width=\"122\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import java.util.*;\n\n                          List nameFilter = new ArrayList();\n                          nameFilter.add(Filter.eq(\"name\", \"assignedRoles\"));\n                          nameFilter.add(Filter.eq(\"name\", \"detectedRoles\"));\n\n                          QueryOptions ops = new QueryOptions();\n                          ops.addFilter(Filter.eq(\"identity.id\", value));\n                          ops.addFilter(Filter.or(nameFilter));\n\n                          List names = new ArrayList();\n                          List properties = new ArrayList();\n                          properties.add(\"value\");\n                          Iterator iter = context.search(IdentityEntitlement.class, ops, properties);\n                          while(iter.hasNext()){\n                            names.add(iter.next()[0]);\n                          }\n                          return names;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"applications\" header=\"Applications\" property=\"links.application.name\" subQueryKey=\"id\" width=\"122\"/>\n          </Columns>\n          <InitializationRule>\n            <Reference class=\"sailpoint.object.Rule\" id=\"4028ab1063f427af0163f4293a3b01f9\" name=\"Identity Report Form Customizer\"/>\n          </InitializationRule>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>9</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd939010d78193904230470012',1733292077127,1733292081953,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>5</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd94ab18298194ab59476e0013',1738041542511,1738041547625,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>7</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd957e1ec681957e5fe53f0013',1741581968704,1741581972804,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>0</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd95cb121e8195cbc34d190014',1742880328985,1742880334539,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>0</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd965b1be58196627527370334',1745408567188,1745466488526,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>0</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n'),('a9fe0bbd97a01e0b8197a0bf3f600013',1750748577633,1750748582769,NULL,NULL,NULL,NULL,NULL,-1,-1,-1,'<Attributes>\n  <Map>\n    <entry key=\"csvRowsPerBucket\">\n      <value>\n        <Integer>1000</Integer>\n      </value>\n    </entry>\n    <entry key=\"reportDefinition\">\n      <value>\n        <LiveReport title=\"Application Status Report\">\n          <DataSource objectType=\"Application\" type=\"Hql\">\n            <Query>from Application a</Query>\n            <QueryParameters>\n              <Parameter argument=\"applications\"/>\n            </QueryParameters>\n            <QueryScript>\n              <Source>\n                        \n                              if (args.containsKey(\"applications\")){\n                                return query + \" where a.id in (:applications)\";\n                              }\n                              return query;\n                          \n                       </Source>\n            </QueryScript>\n            <SortOrder>\n              <Sort ascending=\"true\" field=\"name\"/>\n            </SortOrder>\n          </DataSource>\n          <ReportForm>\n            <Reference class=\"sailpoint.object.Form\" id=\"4028ab1063f427af0163f429966602ac\" name=\"Report Form Skeleton\"/>\n          </ReportForm>\n          <Columns>\n            <ReportColumnConfig field=\"name\" header=\"Application\" property=\"name\" sortable=\"true\" width=\"135\"/>\n            <ReportColumnConfig field=\"numberAccounts\" header=\"Number of Accounts\" property=\"(select count(id) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"lastAgg\" header=\"Last Aggregation\" property=\"attributes\" sortable=\"true\" width=\"135\">\n              <RenderScript>\n                <Source>\n                            if(null != value){\n                              return value.get(\"acctAggregationEnd\");\n                            }\n                          </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n            <ReportColumnConfig field=\"oldRefresh\" header=\"Oldest Refresh Time\" property=\"(select min(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"newRefresh\" header=\"Newest Refresh Time\" property=\"(select max(lastRefresh) from sailpoint.object.Link l where l.application.id = a.id)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAssignments\" header=\"Total Assignments\" property=\"(select count(id) from sailpoint.object.IdentityEntitlement e where e.application.id = a.id and e.type is not null)\" width=\"135\"/>\n            <ReportColumnConfig field=\"totalAttributes\" header=\"Unique Entitlements\" property=\"a.id\" width=\"135\">\n              <RenderScript>\n                <Source>\n                          import sailpoint.object.*;\n                          import sailpoint.tools.BrandingServiceFactory;\n                          import java.util.*;\n                          import sailpoint.tools.*;\n\n                          /*\n                            HQL does not allow us to count multiple distinct columns so use sql\n                          */\n\n                          String hql = \"sql:select count(*) from (select distinct name, value, type from  \"\n                                  + BrandingServiceFactory.getService().brandTableName( \"identity_entitlement\" ) +\n                                  \" where type is not null and application = :applicationId) subquery\";\n                          Map params = new HashMap();\n                          params.put(\"applicationId\", value);\n                          Iterator result = context.search(hql, params, new QueryOptions());\n                          int count = 0;\n                          while (result.hasNext()){\n                              Integer val = Util.otoi(result.next());\n                              count = val != null ? val.intValue() : 0;\n                          }\n\n                          return count;\n                        </Source>\n              </RenderScript>\n            </ReportColumnConfig>\n          </Columns>\n        </LiveReport>\n      </value>\n    </entry>\n    <entry key=\"reportRowCount\">\n      <value>\n        <Integer>0</Integer>\n      </value>\n    </entry>\n  </Map>\n</Attributes>\n');
/*!40000 ALTER TABLE `spt_jasper_result` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-08-18 12:50:38
